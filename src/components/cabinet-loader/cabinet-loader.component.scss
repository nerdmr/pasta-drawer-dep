@import '../../styles/variables.scss';

// $base-color: #8A4FFF;
// $base-color: $color-viridian-green;
// $base-color: #004777;
// $base-color: #008DD5;
$base-color: #04E762;

$cabinet-color: $base-color;
$drawer-color: #DC0073;
$drawer-inside-color: darken($base-color, 20%);
$border-color: darken($base-color, 10%);
$knob-color: lighten($base-color, 10%);

$depth: 20px; // already adjusted for persepctive
$height: 60px;
$width: 40px;
$width-per-raw: $width / ($width + $depth);
$height-per-raw: $height / ($height + $depth);
$width-per: percentage($width-per-raw);
$depth-per: percentage($depth / ($width + $depth));
$height-per: percentage($height-per-raw);

$drawer-w-per: 1;
$drawer-h-per: .33;
$animation-duration: .8s;

.cabinet {
  * {
    box-sizing: border-box;
  }
  
  margin: 0 auto;
  position: relative;
  width: $width + $depth;
  height: $height + $depth;
  
  &__top, &__side {
    position: absolute;
    border: 1px solid $border-color;
    background: $cabinet-color;
  }
  &__top {
    top: 0;
    left: 0;
    width: $width-per;
    height: $depth;
    transform: skew(-45deg);
    transform-origin: 100% 100%;
  }
  
  &__side {
    top: 0;
    right: 0;
    width: $depth;
    height: $height;
    transform: skewY(-45deg);
    transform-origin: 100% 100%;
  }
  
  &__front {
    
  }
  
  &.animate &-drawer {
    animation: open-close $animation-duration infinite alternate;
    animation-timing-function: ease-in-out;
    &:nth-of-type(3) {
        animation-delay: 0 * $animation-duration;
      }
      &:nth-of-type(2) {
        animation-delay: 2/3 * $animation-duration;
      }
      &:nth-of-type(1) {
        animation-delay: 1/3 * $animation-duration;
      }
  }
  
  &-drawer {
    
    
    &:nth-of-type(3) {
      top: $depth + ($drawer-h-per * $height) * 0;
    }
    &:nth-of-type(2) {
      top: $depth + ($drawer-h-per * $height) * 1;
    }
    &:nth-of-type(1) {
      top: $depth + ($drawer-h-per * $height) * 2;
    }
    
    position: absolute;
    width: percentage($drawer-w-per);
    height: percentage($drawer-h-per * ($height-per-raw));
    top: 0 + $depth;
    left: percentage(((1 - $drawer-w-per) * $width-per-raw) / 2);
    
    &>* {
      position: absolute;
      border: 1px solid $border-color;
    }
    
    &__front {
      background: $drawer-color;
      bottom: 0;
      left: 0;
      width: $width-per;
      height: $depth * $drawer-w-per;
      height: 100%;
      &::after {
        // knob
        $knob-w: .15 * $width;
        content: '';
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
        background: $knob-color;
        width: $knob-w;
        height: $knob-w;
        border-radius: 50%;
      }
    }
    &__side-1, &__side-2 {
      bottom: 0;
      width: $depth-per;
      height: 100%;
      transform: skewY(-45deg);
      transform-origin: 0 100%;
      
    }
    &__side-1 {
      left: 0;
      background: $drawer-inside-color;
    }
    &__side-2 {
      left: $width-per;
      background: $drawer-color;
    }
    &__back {
      bottom: $depth * $drawer-w-per;
      right: 0;
      width: $width-per;
      height: 100%;
      background: $drawer-inside-color;
    }
    &__bottom {
      bottom: 0;
      left: 0;
      background: $drawer-inside-color;
      width: $width-per;
      height: $depth * $drawer-w-per;
      transform: skew(-45deg);
      transform-origin: 100% 100%;
    }
  }
}

@keyframes open-close {
  0% {
    transform: none;
  }
  100% {
    transform: translateX(-$depth) translateY($depth);    
  }
}